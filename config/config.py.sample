class Config:
    SECRET_KEY = "f(\xdfyx9d#x1n\xc4U=?\xa8}\x96\45u:H"
    
    @staticmethod
    def init_app(app):
        pass

class DeveloppementConfig(Config):
    DEBUG = True
    SQLALCHEMY_DATABASE_URI = "postgresql://geonatatlas:monpassachanger@localhost:5432/geonaturedb"

class ProductionConfig(Config):
    SQLALCHEMY_DATABASE_URI = "postgresql://geonatatlas:monpassachanger@localhost:5432/geonaturedb" 

config = {
    'development':DeveloppementConfig,
    'production': ProductionConfig
    }

database_connection = "postgresql://geonatatlas:monpassachanger@localhost:5432/geonaturedb"


# Customisation application



# Customisation application

# nom de la structure
STRUCTURE = "Parc national des Ã‰crins"
STRUCTURE = unicode(STRUCTURE, 'utf-8')

# affiche par maille / True = maille False = point
AFFICHAGE_MAILLE = True

# Nombre de 'x' dernieres observations de la carte sur la page d'acceuil
LIMIT_OBSERVATION = 100

# rang taxonomique qui fixe jusque quel taxon remonte la filiation taxonomique (hierachie dans la fiche d'identite)
LIMIT_RANG_TAXONOMIQUE_HIERARCHIE = 13

# rang taxonomique qui fixe la limite de l'affichage de la fiche espece ou de la liste  ** 35 = ESPECE **  on prend tout ce qui est inferieur ou egal a l'espece pour faire des fiches et ce qui est superieur pour les listes
LIMIT_FICHE_LISTE_HIERARCHY = 35
